{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useUnityContext = void 0;\nvar react_1 = require(\"react\");\nvar error_messages_1 = require(\"../constants/error-messages\");\nvar use_event_system_1 = require(\"./use-event-system\");\nvar use_nullable_state_1 = require(\"./use-nullable-state\");\n/**\n * Creates a Unity Context hook.\n * @param unityConfig The Unity Config on which the Unity Context is based.\n * @returns The Unity Context hook.\n */\nvar useUnityContext = function (unityConfig) {\n  // A reference to the Unity Instance.\n  var _a = (0, use_nullable_state_1.useNullableState)(),\n    unityInstance = _a[0],\n    setUnityInstance = _a[1];\n  // The Unity Instance's loading progression represents the percentage of the\n  // Unity Instance's loading process that has been completed.\n  var _b = (0, react_1.useState)(0),\n    loadingProgression = _b[0],\n    setLoadingProgression = _b[1];\n  // Defines whether the Unity Instance has been loaded.\n  var _c = (0, react_1.useState)(false),\n    isLoaded = _c[0],\n    setIsLoaded = _c[1];\n  // May contain an error that occurred during the initialisation of the Unity\n  // Instance.\n  var _d = (0, use_nullable_state_1.useNullableState)(),\n    initialisationError = _d[0],\n    setInitialisationError = _d[1];\n  /**\n   * The Unity Context's event system stores the event listeners which will\n   * allow Unity or any global source to invoke events to the React application.\n   */\n  var eventSystem = (0, use_event_system_1.useEventSystem)();\n  /**\n   * The Unity Context returns a Unity Provider instance. This is an immutable\n   * object that contains a series of methods and properties that are used to\n   * alter the Unity Context state externally.\n   */\n  var unityProvider = (0, react_1.useRef)({\n    setLoadingProgression: setLoadingProgression,\n    setInitialisationError: setInitialisationError,\n    setUnityInstance: setUnityInstance,\n    setIsLoaded: setIsLoaded,\n    unityConfig: unityConfig\n  });\n  /**\n   * Enables or disabled the Fullscreen mode of the Unity Instance.\n   */\n  var requestFullscreen = (0, react_1.useCallback)(\n  /**\n   * @param enabled Defines whether Unity should be in fullscreen.\n   */\n  function (enabled) {\n    if (unityInstance === null) {\n      // Guarding the Unity Instance.\n      console.warn(error_messages_1.errorMessages.requestFullscreenNoUnityInstance);\n      return;\n    }\n    // For undocumented reasons, the fullscreen mode can only be enabled\n    // with an interger value where the value of \"1\" enables the fullscreen\n    // mode and the value of \"0\" disables the fullscreen mode.\n    unityInstance.SetFullscreen(enabled === true ? 1 : 0);\n  }, [unityInstance]);\n  /**\n   * Lets you asynchronously ask for the pointer to be locked on the given Unity\n   * Application's Canvas Element.\n   */\n  var requestPointerLock = (0, react_1.useCallback)(function () {\n    if (unityInstance === null || typeof unityInstance.Module.canvas === \"undefined\") {\n      // Guarding the Unity Instance and the canvas.\n      console.warn(error_messages_1.errorMessages.requestPointerLockNoUnityInstanceOrCanvas);\n      return;\n    }\n    // Requesting the pointer lock.\n    return unityInstance.Module.canvas.requestPointerLock();\n  }, [unityInstance]);\n  /**\n   * Sends a message to the UnityInstance to invoke a public method.\n   */\n  var sendMessage = (0, react_1.useCallback)(\n  /**\n   * @param gameObjectName the name of the game object in your Unity scene.\n   * @param methodName the name of the public method on the game object.\n   * @param parameter an optional parameter to pass along to the method.\n   */\n  function (gameObjectName, methodName, parameter) {\n    if (unityInstance === null) {\n      // Guarding the Unity Instance.\n      console.warn(error_messages_1.errorMessages.sendMessageNoUnityInstance);\n      return;\n    }\n    unityInstance.SendMessage(gameObjectName, methodName, parameter);\n  }, [unityInstance]);\n  /**\n   * Takes a screenshot of the Unity Instance and returns a base64 encoded\n   * string.\n   */\n  var takeScreenshot = (0, react_1.useCallback)(\n  /**\n   * @param dataType Defines the type of screenshot to take.\n   * @param quality Defines the quality of the screenshot.\n   * @returns A base 64 encoded string of the screenshot.\n   */\n  function (dataType, quality) {\n    if (unityInstance === null || typeof unityInstance.Module.canvas === \"undefined\") {\n      // Guarding the Unity Instance and the canvas.\n      console.warn(error_messages_1.errorMessages.screenshotNoUnityInstanceOrCanvas);\n      return;\n    }\n    // Takes a screenshot by converting Canvas's render-context's buffer into\n    // a Data URL of the specified data type and quality.\n    return unityInstance.Module.canvas.toDataURL(dataType, quality);\n  }, [unityInstance]);\n  /**\n   * Requests the UnityInstance to be unloaded from memory in order to be\n   * unmounted from the DOM.\n   */\n  var unload = (0, react_1.useCallback)(\n  /**\n   * @returns A promise that resolves when the UnityInstance has been unloaded.\n   */\n  function () {\n    if (unityInstance === null) {\n      // Guarding the Unity Instance.\n      console.warn(error_messages_1.errorMessages.quitNoUnityInstance);\n      return Promise.reject();\n    }\n    return unityInstance.Quit();\n  }, [unityInstance]);\n  // Effect invoked when the loading progression changes. When the loading\n  // progression is equal to or more than 1, the Unity Instance is considered\n  // loaded. This will update the isLoaded state.\n  (0, react_1.useEffect)(function () {\n    setIsLoaded(loadingProgression === 1);\n  }, [loadingProgression]);\n  // Returns the Unity Context Hook.\n  return {\n    unityProvider: unityProvider.current,\n    loadingProgression: loadingProgression,\n    initialisationError: initialisationError,\n    isLoaded: isLoaded,\n    UNSAFE__unityInstance: unityInstance,\n    requestFullscreen: requestFullscreen,\n    requestPointerLock: requestPointerLock,\n    sendMessage: sendMessage,\n    unload: unload,\n    takeScreenshot: takeScreenshot,\n    addEventListener: eventSystem.addEventListener,\n    removeEventListener: eventSystem.removeEventListener\n  };\n};\nexports.useUnityContext = useUnityContext;","map":{"version":3,"names":["Object","defineProperty","exports","value","useUnityContext","react_1","require","error_messages_1","use_event_system_1","use_nullable_state_1","unityConfig","_a","useNullableState","unityInstance","setUnityInstance","_b","useState","loadingProgression","setLoadingProgression","_c","isLoaded","setIsLoaded","_d","initialisationError","setInitialisationError","eventSystem","useEventSystem","unityProvider","useRef","requestFullscreen","useCallback","enabled","console","warn","errorMessages","requestFullscreenNoUnityInstance","SetFullscreen","requestPointerLock","Module","canvas","requestPointerLockNoUnityInstanceOrCanvas","sendMessage","gameObjectName","methodName","parameter","sendMessageNoUnityInstance","SendMessage","takeScreenshot","dataType","quality","screenshotNoUnityInstanceOrCanvas","toDataURL","unload","quitNoUnityInstance","Promise","reject","Quit","useEffect","current","UNSAFE__unityInstance","addEventListener","removeEventListener"],"sources":["D:/HeliX/client/node_modules/react-unity-webgl/distribution/hooks/use-unity-context.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useUnityContext = void 0;\nvar react_1 = require(\"react\");\nvar error_messages_1 = require(\"../constants/error-messages\");\nvar use_event_system_1 = require(\"./use-event-system\");\nvar use_nullable_state_1 = require(\"./use-nullable-state\");\n/**\n * Creates a Unity Context hook.\n * @param unityConfig The Unity Config on which the Unity Context is based.\n * @returns The Unity Context hook.\n */\nvar useUnityContext = function (unityConfig) {\n    // A reference to the Unity Instance.\n    var _a = (0, use_nullable_state_1.useNullableState)(), unityInstance = _a[0], setUnityInstance = _a[1];\n    // The Unity Instance's loading progression represents the percentage of the\n    // Unity Instance's loading process that has been completed.\n    var _b = (0, react_1.useState)(0), loadingProgression = _b[0], setLoadingProgression = _b[1];\n    // Defines whether the Unity Instance has been loaded.\n    var _c = (0, react_1.useState)(false), isLoaded = _c[0], setIsLoaded = _c[1];\n    // May contain an error that occurred during the initialisation of the Unity\n    // Instance.\n    var _d = (0, use_nullable_state_1.useNullableState)(), initialisationError = _d[0], setInitialisationError = _d[1];\n    /**\n     * The Unity Context's event system stores the event listeners which will\n     * allow Unity or any global source to invoke events to the React application.\n     */\n    var eventSystem = (0, use_event_system_1.useEventSystem)();\n    /**\n     * The Unity Context returns a Unity Provider instance. This is an immutable\n     * object that contains a series of methods and properties that are used to\n     * alter the Unity Context state externally.\n     */\n    var unityProvider = (0, react_1.useRef)({\n        setLoadingProgression: setLoadingProgression,\n        setInitialisationError: setInitialisationError,\n        setUnityInstance: setUnityInstance,\n        setIsLoaded: setIsLoaded,\n        unityConfig: unityConfig,\n    });\n    /**\n     * Enables or disabled the Fullscreen mode of the Unity Instance.\n     */\n    var requestFullscreen = (0, react_1.useCallback)(\n    /**\n     * @param enabled Defines whether Unity should be in fullscreen.\n     */\n    function (enabled) {\n        if (unityInstance === null) {\n            // Guarding the Unity Instance.\n            console.warn(error_messages_1.errorMessages.requestFullscreenNoUnityInstance);\n            return;\n        }\n        // For undocumented reasons, the fullscreen mode can only be enabled\n        // with an interger value where the value of \"1\" enables the fullscreen\n        // mode and the value of \"0\" disables the fullscreen mode.\n        unityInstance.SetFullscreen(enabled === true ? 1 : 0);\n    }, [unityInstance]);\n    /**\n     * Lets you asynchronously ask for the pointer to be locked on the given Unity\n     * Application's Canvas Element.\n     */\n    var requestPointerLock = (0, react_1.useCallback)(function () {\n        if (unityInstance === null ||\n            typeof unityInstance.Module.canvas === \"undefined\") {\n            // Guarding the Unity Instance and the canvas.\n            console.warn(error_messages_1.errorMessages.requestPointerLockNoUnityInstanceOrCanvas);\n            return;\n        }\n        // Requesting the pointer lock.\n        return unityInstance.Module.canvas.requestPointerLock();\n    }, [unityInstance]);\n    /**\n     * Sends a message to the UnityInstance to invoke a public method.\n     */\n    var sendMessage = (0, react_1.useCallback)(\n    /**\n     * @param gameObjectName the name of the game object in your Unity scene.\n     * @param methodName the name of the public method on the game object.\n     * @param parameter an optional parameter to pass along to the method.\n     */\n    function (gameObjectName, methodName, parameter) {\n        if (unityInstance === null) {\n            // Guarding the Unity Instance.\n            console.warn(error_messages_1.errorMessages.sendMessageNoUnityInstance);\n            return;\n        }\n        unityInstance.SendMessage(gameObjectName, methodName, parameter);\n    }, [unityInstance]);\n    /**\n     * Takes a screenshot of the Unity Instance and returns a base64 encoded\n     * string.\n     */\n    var takeScreenshot = (0, react_1.useCallback)(\n    /**\n     * @param dataType Defines the type of screenshot to take.\n     * @param quality Defines the quality of the screenshot.\n     * @returns A base 64 encoded string of the screenshot.\n     */\n    function (dataType, quality) {\n        if (unityInstance === null ||\n            typeof unityInstance.Module.canvas === \"undefined\") {\n            // Guarding the Unity Instance and the canvas.\n            console.warn(error_messages_1.errorMessages.screenshotNoUnityInstanceOrCanvas);\n            return;\n        }\n        // Takes a screenshot by converting Canvas's render-context's buffer into\n        // a Data URL of the specified data type and quality.\n        return unityInstance.Module.canvas.toDataURL(dataType, quality);\n    }, [unityInstance]);\n    /**\n     * Requests the UnityInstance to be unloaded from memory in order to be\n     * unmounted from the DOM.\n     */\n    var unload = (0, react_1.useCallback)(\n    /**\n     * @returns A promise that resolves when the UnityInstance has been unloaded.\n     */\n    function () {\n        if (unityInstance === null) {\n            // Guarding the Unity Instance.\n            console.warn(error_messages_1.errorMessages.quitNoUnityInstance);\n            return Promise.reject();\n        }\n        return unityInstance.Quit();\n    }, [unityInstance]);\n    // Effect invoked when the loading progression changes. When the loading\n    // progression is equal to or more than 1, the Unity Instance is considered\n    // loaded. This will update the isLoaded state.\n    (0, react_1.useEffect)(function () {\n        setIsLoaded(loadingProgression === 1);\n    }, [loadingProgression]);\n    // Returns the Unity Context Hook.\n    return {\n        unityProvider: unityProvider.current,\n        loadingProgression: loadingProgression,\n        initialisationError: initialisationError,\n        isLoaded: isLoaded,\n        UNSAFE__unityInstance: unityInstance,\n        requestFullscreen: requestFullscreen,\n        requestPointerLock: requestPointerLock,\n        sendMessage: sendMessage,\n        unload: unload,\n        takeScreenshot: takeScreenshot,\n        addEventListener: eventSystem.addEventListener,\n        removeEventListener: eventSystem.removeEventListener,\n    };\n};\nexports.useUnityContext = useUnityContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}